(()=>{"use strict";var t={987:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Album=void 0;const r=i(123);class o extends r.Item{constructor(t,e){super(t,e),this.pictures=[]}addPicture(t){this.pictures.push(t)}}e.Album=o},123:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Item=void 0,e.Item=class{constructor(t,e){this._id=t,this._title=e}get id(){return this._id}get title(){return this._title}set title(t){this._title=t}}},519:(t,e,i)=>{const r=i(987),o=i(945),s=i(449),n=new(i(536).User)(1,"aland3v","alan",!0),a=new r.Album(10,"Platzi Pictures"),u=new s.Picture(1,"Typescript Course",o.PhotoOrientation.Landscape);n.addAlbum(a),a.addPicture(u),console.log("user",n),n.removeAlbum(a),console.log("user",n)},945:(t,e)=>{var i;Object.defineProperty(e,"__esModule",{value:!0}),e.PhotoOrientation=void 0,(i=e.PhotoOrientation||(e.PhotoOrientation={}))[i.Landscape=0]="Landscape",i[i.Portrait=1]="Portrait",i[i.Square=2]="Square",i[i.Panorama=3]="Panorama"},449:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Picture=void 0;const r=i(945),o=i(123);class s extends o.Item{constructor(t,e,i){super(t,e),this._orientation=i}get orientation(){return this._orientation}set orientation(t){this._orientation=t}toString(){return`[id: ${this.id},\n                 title: ${this.title},\n                 orientation: ${this._orientation}]`}}e.Picture=s,s.photoOrientation=r.PhotoOrientation},536:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.User=void 0,e.User=class{constructor(t,e,i,r){this.id=t,this.username=e,this.firstName=i,this.isPro=r,this.album=[]}addAlbum(t){this.album.push(t)}removeAlbum(t){const e=this.album.findIndex((e=>e.id===t.id));let i;return e>=0&&(i=this.album[e],this.album.splice(e,1)),i}}}},e={};!function i(r){if(e[r])return e[r].exports;var o=e[r]={exports:{}};return t[r](o,o.exports,i),o.exports}(519)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,